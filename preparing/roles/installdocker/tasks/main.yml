---
- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Install required system packages
  apt:
      name: "{{ item }}"
      state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - gnupg-agent
 
 

- name: Add Docker GPG apt Key for ubuntu
  apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Add Docker Repository for ubuntu
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Add Docker GPG apt Key
  apt_key:
        # url: https://download.docker.com/linux/debian/gpg 
        url: https://repo.tpcms.ir/repository/debian-docker/gpg
        state: present
  when: ansible_facts['distribution'] == "Debian"

- name: Add Docker Repository
  apt_repository:
    #repo: deb https://download.docker.com/linux/debian bookworm stable
    repo: deb https://repo.tpcms.ir/repository/debian-docker bookworm stable 
    
    state: present
  when: ansible_facts['distribution'] == "Debian"


- name: install docker
  apt:
    name: "{{item}}"
    state: latest
    # update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-compose-plugin
    - docker-compose
    - docker-buildx-plugin 
    
- name: config docker
  template:
    src: docker-service.j2
    dest: /etc/docker/daemon.json
  tags: configdocker
  notify: restart docker
 
- name: start and enable docker
  service:
    name: docker
    state: started
    enabled: yes

- name: Create a network
  docker_network:
    name: web_net
- name: Create a network
  docker_network:
    name: app_net